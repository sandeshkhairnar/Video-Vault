{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task\\\\video-management-app\\\\frontend\\\\src\\\\components\\\\VideoRecorder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Camera, StopCircle, Upload, RadioReceiver } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoRecorder() {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [recordedBlob, setRecordedBlob] = useState(null);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n  const timerRef = useRef(null);\n  const navigate = useNavigate();\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      videoRef.current.srcObject = stream;\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = event => {\n        if (event.data.size > 0) {\n          chunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorderRef.current.onstop = () => {\n        const blob = new Blob(chunksRef.current, {\n          type: 'video/webm'\n        });\n        setRecordedBlob(blob);\n        videoRef.current.srcObject = null;\n        chunksRef.current = [];\n        setRecordingTime(0);\n      };\n      mediaRecorderRef.current.start();\n      setRecording(true);\n\n      // Start timer\n      timerRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n    } catch (error) {\n      console.error('Error accessing media devices:', error);\n    }\n  };\n  const stopRecording = () => {\n    mediaRecorderRef.current.stop();\n    clearInterval(timerRef.current);\n    setRecording(false);\n  };\n  const uploadVideo = async () => {\n    if (!recordedBlob) return;\n    const formData = new FormData();\n    formData.append('video', recordedBlob, 'recorded-video.webm');\n    try {\n      const response = await fetch('http://localhost:5000/record', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        navigate('/');\n      }\n    } catch (error) {\n      console.error('Error uploading video:', error);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto max-w-xl px-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-md overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          muted: true,\n          className: \"w-full aspect-video bg-black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), recording && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-4 left-4 bg-red-500 text-white px-3 py-1 rounded-full flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(RadioReceiver, {\n            className: \"mr-2\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), formatTime(recordingTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center space-x-4\",\n          children: [!recording ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startRecording,\n            className: \"flex items-center bg-green-500 text-white px-6 py-3 rounded-lg shadow-md hover:bg-green-600 transition duration-300\",\n            children: [/*#__PURE__*/_jsxDEV(Camera, {\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), \"Start Recording\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: stopRecording,\n            className: \"flex items-center bg-red-500 text-white px-6 py-3 rounded-lg shadow-md hover:bg-red-600 transition duration-300\",\n            children: [/*#__PURE__*/_jsxDEV(StopCircle, {\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), \"Stop Recording\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), recordedBlob && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: uploadVideo,\n            className: \"flex items-center bg-blue-500 text-white px-6 py-3 rounded-lg shadow-md hover:bg-blue-600 transition duration-300\",\n            children: [/*#__PURE__*/_jsxDEV(Upload, {\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), \"Upload Video\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoRecorder, \"j9C3t/eE/FJmxhZODB4STAC7fBI=\", false, function () {\n  return [useNavigate];\n});\n_c = VideoRecorder;\nexport default VideoRecorder;\nvar _c;\n$RefreshReg$(_c, \"VideoRecorder\");","map":{"version":3,"names":["React","useState","useRef","useNavigate","Camera","StopCircle","Upload","RadioReceiver","jsxDEV","_jsxDEV","VideoRecorder","_s","recording","setRecording","recordedBlob","setRecordedBlob","recordingTime","setRecordingTime","videoRef","mediaRecorderRef","chunksRef","timerRef","navigate","startRecording","stream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","MediaRecorder","ondataavailable","event","data","size","push","onstop","blob","Blob","type","start","setInterval","prev","error","console","stopRecording","stop","clearInterval","uploadVideo","formData","FormData","append","response","fetch","method","body","ok","formatTime","seconds","mins","Math","floor","secs","toString","padStart","className","children","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Task/video-management-app/frontend/src/components/VideoRecorder.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Camera, StopCircle, Upload, RadioReceiver } from 'lucide-react';\r\n\r\nfunction VideoRecorder() {\r\n  const [recording, setRecording] = useState(false);\r\n  const [recordedBlob, setRecordedBlob] = useState(null);\r\n  const [recordingTime, setRecordingTime] = useState(0);\r\n  const videoRef = useRef(null);\r\n  const mediaRecorderRef = useRef(null);\r\n  const chunksRef = useRef([]);\r\n  const timerRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n      videoRef.current.srcObject = stream;\r\n      mediaRecorderRef.current = new MediaRecorder(stream);\r\n\r\n      mediaRecorderRef.current.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n          chunksRef.current.push(event.data);\r\n        }\r\n      };\r\n\r\n      mediaRecorderRef.current.onstop = () => {\r\n        const blob = new Blob(chunksRef.current, { type: 'video/webm' });\r\n        setRecordedBlob(blob);\r\n        videoRef.current.srcObject = null;\r\n        chunksRef.current = [];\r\n        setRecordingTime(0);\r\n      };\r\n\r\n      mediaRecorderRef.current.start();\r\n      setRecording(true);\r\n\r\n      // Start timer\r\n      timerRef.current = setInterval(() => {\r\n        setRecordingTime(prev => prev + 1);\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.error('Error accessing media devices:', error);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    mediaRecorderRef.current.stop();\r\n    clearInterval(timerRef.current);\r\n    setRecording(false);\r\n  };\r\n\r\n  const uploadVideo = async () => {\r\n    if (!recordedBlob) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('video', recordedBlob, 'recorded-video.webm');\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/record', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      if (response.ok) {\r\n        navigate('/');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading video:', error);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto max-w-xl px-4\">\r\n      <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\r\n        <div className=\"relative\">\r\n          <video \r\n            ref={videoRef} \r\n            autoPlay \r\n            muted \r\n            className=\"w-full aspect-video bg-black\"\r\n          />\r\n          {recording && (\r\n            <div className=\"absolute top-4 left-4 bg-red-500 text-white px-3 py-1 rounded-full flex items-center\">\r\n              <RadioReceiver className=\"mr-2\" size={16} />\r\n              {formatTime(recordingTime)}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"p-6\">\r\n          <div className=\"flex justify-center space-x-4\">\r\n            {!recording ? (\r\n              <button \r\n                onClick={startRecording} \r\n                className=\"flex items-center bg-green-500 text-white px-6 py-3 rounded-lg shadow-md hover:bg-green-600 transition duration-300\"\r\n              >\r\n                <Camera className=\"mr-2\" />\r\n                Start Recording\r\n              </button>\r\n            ) : (\r\n              <button \r\n                onClick={stopRecording} \r\n                className=\"flex items-center bg-red-500 text-white px-6 py-3 rounded-lg shadow-md hover:bg-red-600 transition duration-300\"\r\n              >\r\n                <StopCircle className=\"mr-2\" />\r\n                Stop Recording\r\n              </button>\r\n            )}\r\n\r\n            {recordedBlob && (\r\n              <button \r\n                onClick={uploadVideo} \r\n                className=\"flex items-center bg-blue-500 text-white px-6 py-3 rounded-lg shadow-md hover:bg-blue-600 transition duration-300\"\r\n              >\r\n                <Upload className=\"mr-2\" />\r\n                Upload Video\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoRecorder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}