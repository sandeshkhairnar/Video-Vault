{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task\\\\video-management-app\\\\frontend\\\\src\\\\components\\\\VideoRecorder.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/VideoRecorder.js\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoRecorder() {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const videoRef = useRef(null);\n  const chunksRef = useRef([]);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      videoRef.current.srcObject = stream;\n      const recorder = new MediaRecorder(stream);\n      recorder.ondataavailable = e => {\n        if (e.data.size > 0) {\n          chunksRef.current.push(e.data);\n        }\n      };\n      recorder.onstop = async () => {\n        const blob = new Blob(chunksRef.current, {\n          type: 'video/webm'\n        });\n        chunksRef.current = [];\n        const formData = new FormData();\n        formData.append('video', blob, 'recording.webm');\n        try {\n          await axios.post('http://localhost:5000/record', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          alert('Video saved successfully!');\n        } catch (error) {\n          console.error('Error saving video:', error);\n        }\n      };\n      recorder.start();\n      setMediaRecorder(recorder);\n      setRecording(true);\n    } catch (error) {\n      console.error('Error starting recording:', error);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorder) {\n      mediaRecorder.stop();\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      setRecording(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Video Recorder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: true,\n      className: \"mx-auto mb-4 max-w-md border-2 border-gray-300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-x-4\",\n      children: !recording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        className: \"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\",\n        children: \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        className: \"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\",\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoRecorder, \"w/MnJVxkP4KJkvjSOYxWj3PWMfU=\");\n_c = VideoRecorder;\nexport default VideoRecorder;\nvar _c;\n$RefreshReg$(_c, \"VideoRecorder\");","map":{"version":3,"names":["React","useState","useRef","axios","jsxDEV","_jsxDEV","VideoRecorder","_s","recording","setRecording","mediaRecorder","setMediaRecorder","videoRef","chunksRef","startRecording","stream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","recorder","MediaRecorder","ondataavailable","e","data","size","push","onstop","blob","Blob","type","formData","FormData","append","post","headers","alert","error","console","start","stopRecording","stop","getTracks","forEach","track","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","onClick","_c","$RefreshReg$"],"sources":["D:/Task/video-management-app/frontend/src/components/VideoRecorder.js"],"sourcesContent":["// frontend/src/components/VideoRecorder.js\r\nimport React, { useState, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction VideoRecorder() {\r\n  const [recording, setRecording] = useState(false);\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n  const videoRef = useRef(null);\r\n  const chunksRef = useRef([]);\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n      videoRef.current.srcObject = stream;\r\n      const recorder = new MediaRecorder(stream);\r\n\r\n      recorder.ondataavailable = (e) => {\r\n        if (e.data.size > 0) {\r\n          chunksRef.current.push(e.data);\r\n        }\r\n      };\r\n\r\n      recorder.onstop = async () => {\r\n        const blob = new Blob(chunksRef.current, { type: 'video/webm' });\r\n        chunksRef.current = [];\r\n\r\n        const formData = new FormData();\r\n        formData.append('video', blob, 'recording.webm');\r\n\r\n        try {\r\n          await axios.post('http://localhost:5000/record', formData, {\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n          });\r\n          alert('Video saved successfully!');\r\n        } catch (error) {\r\n          console.error('Error saving video:', error);\r\n        }\r\n      };\r\n\r\n      recorder.start();\r\n      setMediaRecorder(recorder);\r\n      setRecording(true);\r\n    } catch (error) {\r\n      console.error('Error starting recording:', error);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorder) {\r\n      mediaRecorder.stop();\r\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n      setRecording(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto text-center\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Video Recorder</h1>\r\n      <video \r\n        ref={videoRef} \r\n        autoPlay \r\n        muted \r\n        className=\"mx-auto mb-4 max-w-md border-2 border-gray-300\"\r\n      />\r\n      <div className=\"space-x-4\">\r\n        {!recording ? (\r\n          <button \r\n            onClick={startRecording} \r\n            className=\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\"\r\n          >\r\n            Start Recording\r\n          </button>\r\n        ) : (\r\n          <button \r\n            onClick={stopRecording} \r\n            className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\r\n          >\r\n            Stop Recording\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoRecorder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}