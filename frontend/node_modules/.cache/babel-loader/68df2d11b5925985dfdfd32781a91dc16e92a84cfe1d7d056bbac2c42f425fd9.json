{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task\\\\video-management-app\\\\frontend\\\\src\\\\components\\\\VideoRecorder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoRecorder() {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [recordedBlob, setRecordedBlob] = useState(null);\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n  const navigate = useNavigate();\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      videoRef.current.srcObject = stream;\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = event => {\n        if (event.data.size > 0) {\n          chunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorderRef.current.onstop = () => {\n        const blob = new Blob(chunksRef.current, {\n          type: 'video/webm'\n        });\n        setRecordedBlob(blob);\n        videoRef.current.srcObject = null;\n        chunksRef.current = [];\n      };\n      mediaRecorderRef.current.start();\n      setRecording(true);\n    } catch (error) {\n      console.error('Error accessing media devices:', error);\n    }\n  };\n  const stopRecording = () => {\n    mediaRecorderRef.current.stop();\n    setRecording(false);\n  };\n  const uploadVideo = async () => {\n    if (!recordedBlob) return;\n    const formData = new FormData();\n    formData.append('video', recordedBlob, 'recorded-video.webm');\n    try {\n      const response = await fetch('http://localhost:5000/record', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        alert('Video uploaded successfully!');\n        navigate('/');\n      }\n    } catch (error) {\n      console.error('Error uploading video:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Video Recorder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        muted: true,\n        className: \"w-full max-w-md mb-4 bg-black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-x-4\",\n        children: [!recording ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startRecording,\n          className: \"bg-green-500 text-white px-4 py-2 rounded\",\n          children: \"Start Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopRecording,\n          className: \"bg-red-500 text-white px-4 py-2 rounded\",\n          children: \"Stop Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), recordedBlob && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: uploadVideo,\n          className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n          children: \"Upload Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoRecorder, \"fNRrwo+xtA+UxLubvQLDsNWJedY=\", false, function () {\n  return [useNavigate];\n});\n_c = VideoRecorder;\nexport default VideoRecorder;\nvar _c;\n$RefreshReg$(_c, \"VideoRecorder\");","map":{"version":3,"names":["React","useState","useRef","useNavigate","jsxDEV","_jsxDEV","VideoRecorder","_s","recording","setRecording","recordedBlob","setRecordedBlob","videoRef","mediaRecorderRef","chunksRef","navigate","startRecording","stream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","MediaRecorder","ondataavailable","event","data","size","push","onstop","blob","Blob","type","start","error","console","stopRecording","stop","uploadVideo","formData","FormData","append","response","fetch","method","body","ok","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","onClick","_c","$RefreshReg$"],"sources":["D:/Task/video-management-app/frontend/src/components/VideoRecorder.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction VideoRecorder() {\r\n  const [recording, setRecording] = useState(false);\r\n  const [recordedBlob, setRecordedBlob] = useState(null);\r\n  const videoRef = useRef(null);\r\n  const mediaRecorderRef = useRef(null);\r\n  const chunksRef = useRef([]);\r\n  const navigate = useNavigate();\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n      videoRef.current.srcObject = stream;\r\n      mediaRecorderRef.current = new MediaRecorder(stream);\r\n\r\n      mediaRecorderRef.current.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n          chunksRef.current.push(event.data);\r\n        }\r\n      };\r\n\r\n      mediaRecorderRef.current.onstop = () => {\r\n        const blob = new Blob(chunksRef.current, { type: 'video/webm' });\r\n        setRecordedBlob(blob);\r\n        videoRef.current.srcObject = null;\r\n        chunksRef.current = [];\r\n      };\r\n\r\n      mediaRecorderRef.current.start();\r\n      setRecording(true);\r\n    } catch (error) {\r\n      console.error('Error accessing media devices:', error);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    mediaRecorderRef.current.stop();\r\n    setRecording(false);\r\n  };\r\n\r\n  const uploadVideo = async () => {\r\n    if (!recordedBlob) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('video', recordedBlob, 'recorded-video.webm');\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/record', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Video uploaded successfully!');\r\n        navigate('/');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading video:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto text-center\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Video Recorder</h1>\r\n      \r\n      <div className=\"flex flex-col items-center\">\r\n        <video \r\n          ref={videoRef} \r\n          autoPlay \r\n          muted \r\n          className=\"w-full max-w-md mb-4 bg-black\"\r\n        />\r\n\r\n        <div className=\"space-x-4\">\r\n          {!recording ? (\r\n            <button \r\n              onClick={startRecording} \r\n              className=\"bg-green-500 text-white px-4 py-2 rounded\"\r\n            >\r\n              Start Recording\r\n            </button>\r\n          ) : (\r\n            <button \r\n              onClick={stopRecording} \r\n              className=\"bg-red-500 text-white px-4 py-2 rounded\"\r\n            >\r\n              Stop Recording\r\n            </button>\r\n          )}\r\n\r\n          {recordedBlob && (\r\n            <button \r\n              onClick={uploadVideo} \r\n              className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n            >\r\n              Upload Video\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoRecorder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}